{"version":3,"sources":["gulpfile.js"],"names":[],"mappings":"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","file":"gulpfile-compiled.js","sourcesContent":["/**\r\n * Created by Anchao on 2015/10/4.\r\n */\r\n'use strict'\r\n\r\nvar gulp = require('gulp');\r\nvar del = require('del');\r\nvar changed = require('gulp-changed');\r\n//html\r\nvar jade = require('gulp-jade');\r\n//css\r\nvar compass = require('gulp-compass');\r\n//image\r\nvar minimage = require('gulp-image');\r\n//js\r\nvar webpack= require('webpack');\r\nvar webpackstream = require('webpack-stream');\r\nvar watchify = require('watchify');\r\nvar browserify=require('browserify');\r\nvar source = require('vinyl-source-stream');\r\nvar buffer = require('vinyl-buffer');\r\nvar gutil = require('gulp-util');\r\nvar sourcemaps = require('gulp-sourcemaps');\r\nvar assign = require('lodash.assign');\r\nvar uglify = require('gulp-uglify');\r\nvar babelify = require('babelify');\r\n\r\nvar browserSync = require('browser-sync').create();\r\nvar reload = browserSync.reload;\r\n\r\n\r\n\r\nvar config = {\r\n    'dist': 'dist',\r\n    'html': 'dist/*.html',\r\n    'jade': 'template/*.jade',\r\n    'sass': 'sass/**/*.scss',\r\n    'distCss': 'dist/css',\r\n    'distScript': 'dist/scripts',\r\n    'image':'images/{,*/}*.{gif,jpeg,jpg,png,ico}',\r\n    'distImg': 'dist/images',\r\n    'mainJs': 'main.js',\r\n    'js':{\r\n        entries: './scripts/main.js',\r\n        extensions: ['.js', '.jsx', '.es6'],\r\n        debug: true,\r\n        transform: [babelify]\r\n    }\r\n};\r\n\r\n//删除\r\ngulp.task('clean', function () {\r\n    return del(['dist']).then(function(){\r\n        console.log('删除完成');\r\n    });\r\n});\r\n\r\n\r\n//html_template\r\ngulp.task('templates', function() {\r\n    gulp.src(config.jade)\r\n        .pipe(changed(config.jade))\r\n        .pipe(jade({\r\n            doctype:'html',\r\n            pretty:false\r\n        }))\r\n        .pipe(gulp.dest(config.dist));\r\n});\r\n\r\n\r\n\r\n//样式\r\ngulp.task('styles', function () {\r\n    return gulp.src(config.sass)\r\n        .pipe(changed(config.distCss))\r\n        .pipe(compass({\r\n            config_file: 'config.rb',\r\n            css: config.distCss,\r\n            sass: 'sass'\r\n        }))\r\n        .pipe(gulp.dest(config.distCss))\r\n        .pipe(reload({stream: true}));\r\n});\r\n//copy bootstrap服务器端字体\r\ngulp.task('copyFont',function(){\r\n    var src='node_modules/bootstrap-sass/assets/fonts/bootstrap/*';\r\n    var dest= config.distCss+'/fonts/';\r\n\r\n    return gulp.src(src)\r\n        .pipe(gulp.dest(dest))\r\n        .pipe(reload({stream: true}));\r\n});\r\n\r\n\r\n\r\n\r\n//image\r\ngulp.task('images', function () {\r\n    return gulp.src([config.image,'!images/icons/*'])\r\n        .pipe(changed(config.image))\r\n        .pipe(minimage())\r\n        .pipe(gulp.dest(config.distImg))\r\n        .pipe(reload({stream: true}));\r\n});\r\n\r\n//监听js\r\ngulp.task('watchify', function(){\r\n    //与browserify联合使用，监听Js变化\r\n    var b = watchify(browserify(assign({},watchify.args, config.js)));\r\n    b.on('update', bundle); // 当任何依赖发生改变的时候，运行打包工具\r\n    b.transform(babelify).on('update', bundle);//当jsx发生变化，运行打包工具\r\n    b.on('log', gutil.log); // 输出编译日志到终端\r\n\r\n    function bundle() {\r\n        return b.bundle()\r\n            // 如果有错误发生，记录这些错误\r\n            .on('error', gutil.log.bind(gutil, 'Browserify Error'))\r\n            .pipe(source(config.mainJs))\r\n            // 可选项，如果你不需要缓存文件内容，就删除\r\n            .pipe(buffer())\r\n            // 可选项，如果你不需要 sourcemaps，就删除\r\n            .pipe(sourcemaps.init({loadMaps: true})) // 从 browserify 文件载入 map\r\n            .pipe(uglify())\r\n            // 在这里将变换操作加入管道\r\n            .pipe(sourcemaps.write('./')) // 写入 .map 文件\r\n            .pipe(gulp.dest(config.distScript))\r\n            .pipe(reload({stream: true}));\r\n    }\r\n\r\n    return bundle();\r\n});\r\n\r\ngulp.task('webpack', function() {\r\n    return gulp.src(config.mainJs)\r\n        .pipe(webpackstream({\r\n            watch: true,\r\n            entry: {\r\n                main: './scripts/main.js'\r\n            },\r\n            output: {\r\n                filename: '[name].js',\r\n                sourceMapFilename:'[file].map'\r\n            },\r\n            devtool:\"source-map\",\r\n            resolve: {\r\n                extensions: ['', '.js', '.jsx']\r\n            },\r\n            module: {\r\n                loaders: [\r\n                    {\r\n                        test: /\\.jsx?$/,\r\n                        exclude: /(node_modules|bower_components)/,\r\n                        loader: 'babel'\r\n                    }\r\n                ]\r\n            }\r\n            //plugins:[new webpack.optimize.UglifyJsPlugin({minimize: true})]\r\n        }))\r\n        .pipe(gulp.dest(config.distScript))\r\n        .pipe(reload({stream: true}));\r\n});\r\n\r\n//打包js\r\ngulp.task('browserify', function () {\r\n    return browserify(config.js)\r\n        .transform(babelify)\r\n        .bundle()\r\n        .pipe(source(config.mainJs))\r\n        .pipe(buffer())\r\n        .pipe(sourcemaps.init({loadMaps: true}))\r\n        .pipe(uglify())\r\n        .pipe(sourcemaps.write('./'))\r\n        .pipe(gulp.dest(config.distScript))\r\n        .pipe(reload({stream: true}));\r\n});\r\n\r\ngulp.task('browserSync', function () {\r\n    browserSync.init({\r\n        server: {\r\n            baseDir: './dist/'\r\n        },\r\n        port: 3000,\r\n        open: false\r\n    });\r\n\r\n    //监听模板html变化\r\n    gulp.watch(\"template/*.jade\",['templates']);\r\n    //监听sass变化\r\n    gulp.watch(config.sass,['styles']);\r\n    //监听image变化\r\n    gulp.watch(config.image,['images']);\r\n});\r\n\r\ngulp.task('build',['clean'],function () {\r\n    gulp.start(['browserify','templates','styles','images']);\r\n});\r\n\r\ngulp.task('watch',['clean'],function () {\r\n    gulp.start(['browserSync','webpack','templates','styles','images']);\r\n});\r\n\r\ngulp.task('default',['clean'], function () {\r\n    gulp.start(['browserSync','watchify','templates','styles','images']);\r\n});"]}